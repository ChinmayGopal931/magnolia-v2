version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: magnolia_postgres_prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-magnolia_v2}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - magnolia_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: magnolia-v2:latest
    container_name: magnolia_app_prod
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${POSTGRES_USER}
      PORT: ${PORT:-3000}
      HYPERLIQUID_API_URL: ${HYPERLIQUID_API_URL:-https://api.hyperliquid.xyz}
      HYPERLIQUID_CHAIN: ${HYPERLIQUID_CHAIN:-Mainnet}
      HYPERLIQUID_SIGNATURE_CHAIN_ID: ${HYPERLIQUID_SIGNATURE_CHAIN_ID:-0xa4b1}
      API_SECRET_KEY: ${API_SECRET_KEY}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - magnolia_network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx reverse proxy (optional, recommended for production)
  nginx:
    image: nginx:alpine
    container_name: magnolia_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - app
    networks:
      - magnolia_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    profiles:
      - with-nginx

  # Backup service (runs daily)
  backup:
    image: postgres:16-alpine
    container_name: magnolia_backup
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-magnolia_v2}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./docker/scripts/backup.sh:/backup.sh:ro
    entrypoint: ["/bin/sh"]
    command: ["-c", "while true; do /backup.sh; sleep 86400; done"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - magnolia_network
    profiles:
      - with-backup

volumes:
  postgres_data:
    driver: local
  nginx_cache:
    driver: local

networks:
  magnolia_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16